stages:
  - compile
  - collect

compile_thesis:
  stage: compile
  image: texlive/texlive  # use a Docker image for LaTeX from https://hub.docker.com/
  script: make clean thesis.pdf  # build the pdf just as you would on your computer
  artifacts:
    paths: 
      - thesis.pdf  # instruct GitLab to keep the main.pdf file
    expire_in: 5 minutes

compile_intro:
  stage: compile
  image: texlive/texlive  # use a Docker image for LaTeX from https://hub.docker.com/
  script: make clean introduction.pdf  # build the pdf just as you would on your computer
  artifacts:
    paths: 
      - introduction.pdf  # instruct GitLab to keep the main.pdf file
    expire_in: 5 minutes

compile_theory:
  stage: compile
  image: texlive/texlive  # use a Docker image for LaTeX from https://hub.docker.com/
  script: make clean theory.pdf  # build the pdf just as you would on your computer
  artifacts:
    paths: 
      - theory.pdf  # instruct GitLab to keep the main.pdf file
    expire_in: 5 minutes

compile_detector:
  stage: compile
  image: texlive/texlive  # use a Docker image for LaTeX from https://hub.docker.com/
  script: make clean detector.pdf  # build the pdf just as you would on your computer
  artifacts:
    paths: 
      - detector.pdf  # instruct GitLab to keep the main.pdf file
    expire_in: 5 minutes

compile_ml:
  stage: compile
  image: texlive/texlive  # use a Docker image for LaTeX from https://hub.docker.com/
  script: make clean machine-learning.pdf  # build the pdf just as you would on your computer
  artifacts:
    paths: 
      - machine-learning.pdf  # instruct GitLab to keep the main.pdf file
    expire_in: 5 minutes

compile_reco:
  stage: compile
  image: texlive/texlive  # use a Docker image for LaTeX from https://hub.docker.com/
  script: make clean recon.pdf  # build the pdf just as you would on your computer
  artifacts:
    paths: 
      - recon.pdf  # instruct GitLab to keep the main.pdf file
    expire_in: 5 minutes

compile_strategy:
  stage: compile
  image: texlive/texlive
  script: make clean strategy.pdf
  artifacts:
    paths:
      - strategy.pdf
    expire_in: 5 minutes

compile_systematics:
  stage: compile
  image: texlive/texlive  # use a Docker image for LaTeX from https://hub.docker.com/
  script: make clean systematics.pdf  # build the pdf just as you would on your computer
  artifacts:
    paths: 
      - systematics.pdf  # instruct GitLab to keep the main.pdf file
    expire_in: 5 minutes

compile_results:
  stage: compile
  image: texlive/texlive  # use a Docker image for LaTeX from https://hub.docker.com/
  script: make clean results.pdf  # build the pdf just as you would on your computer
  artifacts:
    paths: 
      - results.pdf  # instruct GitLab to keep the main.pdf file
    expire_in: 5 minutes

compile_conclusion:
  stage: compile
  image: texlive/texlive  # use a Docker image for LaTeX from https://hub.docker.com/
  script: make clean conclusion.pdf  # build the pdf just as you would on your computer
  artifacts:
    paths: 
      - conclusion.pdf  # instruct GitLab to keep the main.pdf file
    expire_in: 5 minutes

collect_all:
  stage: collect
  script: mkdir pdfs && mv *.pdf pdfs
  artifacts:
    paths:
      - pdfs
  needs:
    - job: compile_thesis
    - job: compile_intro
    - job: compile_theory
    - job: compile_detector
    - job: compile_ml
    - job: compile_reco
    - job: compile_strategy
    - job: compile_systematics
    - job: compile_results
    - job: compile_conclusion
      artifacts: true
